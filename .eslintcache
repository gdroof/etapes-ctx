[{"/Users/leviegu/Desktop/do/etapes/src/App.tsx":"1","/Users/leviegu/Desktop/do/etapes/src/reportWebVitals.ts":"2","/Users/leviegu/Desktop/do/etapes/src/components/button/button.tsx":"3","/Users/leviegu/Desktop/do/etapes/src/index.tsx":"4","/Users/leviegu/Desktop/etapes/src/App.tsx":"5","/Users/leviegu/Desktop/etapes/src/components/button/button.tsx":"6"},{"size":826,"mtime":1608214858086,"results":"7","hashOfConfig":"8"},{"size":425,"mtime":1607869740967,"results":"9","hashOfConfig":"8"},{"size":1656,"mtime":1608214759938,"results":"10","hashOfConfig":"8"},{"size":508,"mtime":1607874103003,"results":"11","hashOfConfig":"8"},{"size":825,"mtime":1608216501393,"results":"12","hashOfConfig":"13"},{"size":1656,"mtime":1608214759938,"results":"14","hashOfConfig":"13"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17ihhc2",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"wvx8rs",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/leviegu/Desktop/do/etapes/src/App.tsx",[],"/Users/leviegu/Desktop/do/etapes/src/reportWebVitals.ts",[],"/Users/leviegu/Desktop/do/etapes/src/components/button/button.tsx",["28"],"import React from 'react'\nimport classNames from 'classnames'\nimport { type } from 'os'\n\nexport enum ButtonSize {\n    Large = 'l',\n    Middle = 'm',\n    Small = 's'\n}\n\nexport enum ButtonType {\n    Primary = 'primary',\n    Default = 'default',\n    Danger = 'danger',\n    Link = 'link'\n}\n\ninterface BaseButtonProps {\n    className?: string\n    disabled?: boolean\n    size?: ButtonSize\n    btnType?: ButtonType\n    href?: string\n    children?: React.ReactNode\n}\n\ntype NativeButtonProps = BaseButtonProps & React.ButtonHTMLAttributes<HTMLElement>\ntype AnchorButtonProps = BaseButtonProps & React.AnchorHTMLAttributes<HTMLElement>\n\nexport type ButtonProps = Partial<NativeButtonProps & AnchorButtonProps>\n\nconst Button: React.FC<ButtonProps> = (props) => {\n\n    const {\n        disabled,\n        className,\n        size,\n        btnType,\n        href,\n        children,\n        ...restProps\n    } = props\n\n    const classes = classNames('btn', classNames,  {\n        [`btn-${btnType}`]: btnType,\n        [`btn-${size}`]: size,\n        'disabled': (btnType === ButtonType.Link) && disabled\n    })\n\n    if(btnType === ButtonType.Link && href){\n        return (\n            <a\n             className={classes}\n             href={href}\n             { ...restProps }\n            >\n                { children }\n            </a>\n        )\n    } else {\n        return (\n            <button\n             className={classes}\n             disabled={disabled}\n             { ...restProps }\n            >\n                {children}\n            </button>\n        )\n    }\n}\n\nButton.defaultProps = {\n    disabled: false,\n    btnType: ButtonType.Default\n}\n\nexport default Button","/Users/leviegu/Desktop/do/etapes/src/index.tsx",[],"/Users/leviegu/Desktop/etapes/src/App.tsx",[],"/Users/leviegu/Desktop/etapes/src/components/button/button.tsx",["29"],{"ruleId":"30","severity":1,"message":"31","line":3,"column":10,"nodeType":"32","messageId":"33","endLine":3,"endColumn":14},{"ruleId":"30","severity":1,"message":"31","line":3,"column":10,"nodeType":"32","messageId":"33","endLine":3,"endColumn":14},"@typescript-eslint/no-unused-vars","'type' is defined but never used.","Identifier","unusedVar"]